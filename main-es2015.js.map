{"version":3,"sources":["/Users/cmgriffing/repos/scully-plugin-image-sharp/dist/scully-image/fesm2015/scully-image.js","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC4D;AACf;AACP;AACvC;AACc;AACkB;AACnB;;AAExD;AACA;AACA,4BAA4B,mDAAM,CAAC,kDAAK,OAAO,+CAAE,qBAAqB,sDAAS,oCAAoC,0DAAG;AACtH;AACA;AACA,gCAAgC,+CAAU;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,8DAAO,wBAAwB,0DAAG,mCAAmC,2EAAoB;AACzG,gCAAgC,0DAAa,0GAA0G,2EAAoB;AAC3K;AACA;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,oBAAoB,wDAAU;AAC9B,IAAI,gEAAU;AACd,IAAI,qDAAO,IAAI,4DAAM,CAAC,wDAAQ;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjiB;AAC7B;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0DAAa,CAAC,qDAAQ;AACjE,8BAA8B,6DAAM,wBAAwB,2DAAI;AAChE;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA,KAAK,OAAO,qEAAoB,EAAE;AAClC,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,0BAA0B;AAC/B,KAAK,OAAO,wDAAU;AACtB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,uBAAuB,wDAAU;AACjC,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,2BAA2B,wDAAU;AACrC,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,iEAAW;AACf;AACA,6BAA6B,wDAAU;AACvC,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"main-es2015.js","sourcesContent":["import { __decorate, __param } from 'tslib';\nimport { Inject, Injectable, ElementRef, Input, HostBinding, Component, NgModule } from '@angular/core';\nimport { concat, defer, of, fromEvent, Observable, combineLatest, interval } from 'rxjs';\nimport { map, flatMap, distinctUntilChanged, filter, take } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { isScullyGenerated, TransferStateService } from '@scullyio/ng-lib';\nimport { HttpClientModule } from '@angular/common/http';\n\nlet VisibilityService = class VisibilityService {\n    constructor(document) {\n        this.pageVisible$ = concat(defer(() => of(!document.hidden)), fromEvent(document, 'visibilitychange').pipe(map((e) => !document.hidden)));\n    }\n    elementInSight(element) {\n        const elementVisible$ = Observable.create((observer) => {\n            const intersectionObserver = new IntersectionObserver((entries) => {\n                observer.next(entries);\n            });\n            intersectionObserver.observe(element.nativeElement);\n            return () => {\n                intersectionObserver.disconnect();\n            };\n        }).pipe(flatMap((entries) => entries), map((entry) => entry.isIntersecting), distinctUntilChanged());\n        const elementInSight$ = combineLatest(this.pageVisible$, elementVisible$, (pageVisible, elementVisible) => pageVisible && elementVisible).pipe(distinctUntilChanged());\n        return elementInSight$;\n    }\n};\nVisibilityService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nVisibilityService = __decorate([\n    Injectable(),\n    __param(0, Inject(DOCUMENT))\n], VisibilityService);\n\nvar PreloaderTypes;\n(function (PreloaderTypes) {\n    PreloaderTypes[\"blur\"] = \"base64\";\n    PreloaderTypes[\"tracedSVG\"] = \"tracedSVG\";\n    PreloaderTypes[\"primitives\"] = \"primitives\";\n})(PreloaderTypes || (PreloaderTypes = {}));\nconst FULL = 'full';\nvar PrimitivesShapes;\n(function (PrimitivesShapes) {\n    PrimitivesShapes[\"triangle\"] = \"triangle\";\n    PrimitivesShapes[\"ellipse\"] = \"ellipse\";\n    PrimitivesShapes[\"rotatedEellipse\"] = \"rotated-ellipse\";\n    PrimitivesShapes[\"rectangle\"] = \"rectangle\";\n    PrimitivesShapes[\"rotatedRectangle\"] = \"rotatedRectangle\";\n    PrimitivesShapes[\"random\"] = \"random\";\n})(PrimitivesShapes || (PrimitivesShapes = {}));\nvar tracedTurnPolicies;\n(function (tracedTurnPolicies) {\n    tracedTurnPolicies[\"TURNPOLICY_BLACK\"] = \"black\";\n    tracedTurnPolicies[\"TURNPOLICY_WHITE\"] = \"white\";\n    tracedTurnPolicies[\"TURNPOLICY_LEFT\"] = \"left\";\n    tracedTurnPolicies[\"TURNPOLICY_RIGHT\"] = \"right\";\n    tracedTurnPolicies[\"TURNPOLICY_MINORITY\"] = \"minority\";\n    tracedTurnPolicies[\"TURNPOLICY_MAJORITY\"] = \"majority\";\n})(tracedTurnPolicies || (tracedTurnPolicies = {}));\nconst SCULLY_IMAGE_URL_MAP = 'scullyImageUrlMap';\nconst template = `\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"preloaded-image\"\n  data-scully-image=\"something\"\n  [src]=\"preloadedSrc\"\n/>\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"preloaded-image-fade-hack\"\n  data-scully-image=\"something\"\n  [src]=\"preloadedSrc\"\n/>\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"loaded-image\"\n  [src]=\"loadedSrc\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n/>\n`;\nconst componentStyles = `\n:host {\n  position: relative;\n  display: block;\n  overflow: hidden;\n}\n\n:host img {\n  transition: opacity 300ms, filter 300ms;\n  width: 100%;\n  height: auto;\n}\n\n:host .preloaded-image {\n  z-index: 3;\n  opacity: 1;\n}\n\n:host .preloaded-image.loaded {\n  opacity: 0;\n}\n\n:host .preloaded-image-fade-hack {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  opacity: 1;\n}\n\n:host .preloaded-image-fade-hack.loaded {\n  opacity: 0;\n}\n\n:host .loaded-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  opacity: 0;\n}\n\n:host .loaded-image.loaded {\n  opacity: 1;\n}\n\n.blurred {\n  filter: blur(20px);\n}\n`;\nlet ScullyImageComponent = class ScullyImageComponent {\n    constructor(transferState, sanitizer, visibilityService, elementRef) {\n        this.transferState = transferState;\n        this.sanitizer = sanitizer;\n        this.visibilityService = visibilityService;\n        this.elementRef = elementRef;\n        this.src = '';\n        this.lazy = true;\n        this.pluginOptions = {};\n        this.preloader = PreloaderTypes.blur;\n        this.PreloaderTypes = PreloaderTypes;\n        this.imageLoaded = false;\n        this.scullyImageUrlMap = {};\n        this.preloadedSrc = '';\n        this.loadedSrc = '';\n    }\n    getHeight() {\n        if (this.pixelHeight) {\n            return this.pixelHeight + 'px';\n        }\n        else {\n            return 'auto';\n        }\n    }\n    getWidth() {\n        if (this.pixelWidth) {\n            return this.pixelWidth + 'px';\n        }\n        else {\n            return '100%';\n        }\n    }\n    get height() {\n        return this.getHeight();\n    }\n    get width() {\n        return this.getWidth();\n    }\n    baseInit() {\n        if (isScullyGenerated()) {\n            console.log('scully is generated');\n            this.transferState\n                .getState(SCULLY_IMAGE_URL_MAP)\n                .subscribe((scullyImageUrlMap) => {\n                console.log('scullyImageUrlMap', { scullyImageUrlMap });\n                this.scullyImageUrlMap = scullyImageUrlMap;\n                console.log('pluginOptions', this.pluginOptions);\n                this.preloadedSrc =\n                    scullyImageUrlMap[this.getImageKey(this.preloader)];\n                if (this.preloader === PreloaderTypes.primitives) {\n                    this.preloadedSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.preloadedSrc);\n                }\n                else if (this.preloader === PreloaderTypes.tracedSVG) {\n                    this.preloadedSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.preloadedSrc);\n                }\n                const fullSizeImageUrl = scullyImageUrlMap[this.getImageKey(FULL)] || this.src;\n                if (this.lazy) {\n                    this.elementInSight$ = combineLatest(interval(2000), this.visibilityService.elementInSight(this.elementRef), (counter, visible) => visible)\n                        .pipe(filter((visible) => visible), take(1))\n                        .subscribe(() => {\n                        this.fetchImage(fullSizeImageUrl);\n                    });\n                }\n                else {\n                    this.fetchImage(fullSizeImageUrl);\n                }\n            });\n        }\n        else {\n            this.transferState.setState(SCULLY_IMAGE_URL_MAP, {});\n        }\n    }\n    fetchImage(fullSizeImageUrl) {\n        const imgElement = document.createElement('img');\n        imgElement.onload = () => {\n            setTimeout(() => {\n                console.log('image has been loaded');\n                this.loadedSrc = fullSizeImageUrl;\n                this.imageLoaded = true;\n            }, 300);\n        };\n        imgElement.src = fullSizeImageUrl;\n        this.loadedSrc = fullSizeImageUrl;\n    }\n    ngOnChanges(changes) {\n        // if (changes.src && changes.src !== '') {\n        // }\n        // if (isScullyGenerated()) {\n        //   console.log('scully is generated');\n        //   this.getStateAsPromise();\n        // } else {\n        //   console.log('setting state', this.src);\n        //   this.transferState.setState('src', { src: this.src });\n        // }\n    }\n    baseOnDestroy() {\n        if (this.elementInSight$) {\n            this.elementInSight$.unsubscribe();\n        }\n    }\n    getImageKey(preloaderType = '') {\n        const key = this.src +\n            preloaderType +\n            JSON.stringify(this.pluginOptions) +\n            (this.pixelHeight || 0) +\n            (this.pixelWidth || 0) +\n            (this.fluidMaxHeight || 0) +\n            (this.fluidMaxWidth || 0);\n        console.log({ key });\n        return key;\n    }\n};\nScullyImageComponent.ctorParameters = () => [\n    { type: TransferStateService },\n    { type: DomSanitizer },\n    { type: VisibilityService },\n    { type: ElementRef }\n];\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"src\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"pixelHeight\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"pixelWidth\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"fluidMaxWidth\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"fluidMaxHeight\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"lazy\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"pluginOptions\", void 0);\n__decorate([\n    Input()\n], ScullyImageComponent.prototype, \"preloader\", void 0);\n__decorate([\n    HostBinding('style.height')\n], ScullyImageComponent.prototype, \"height\", null);\n__decorate([\n    HostBinding('style.width')\n], ScullyImageComponent.prototype, \"width\", null);\nScullyImageComponent = __decorate([\n    Component({\n        selector: 'scully-image',\n        template,\n        styles: [componentStyles]\n    })\n], ScullyImageComponent);\nlet ScullyBlurImageComponent = class ScullyBlurImageComponent extends ScullyImageComponent {\n    constructor() {\n        super(...arguments);\n        this.preloader = PreloaderTypes.blur;\n    }\n    get height() {\n        return this.getHeight();\n    }\n    get width() {\n        return this.getWidth();\n    }\n    get type() {\n        return this.preloader;\n    }\n    get pluginOptionsAsString() {\n        return JSON.stringify(this.pluginOptions);\n    }\n    ngOnInit() {\n        this.baseInit();\n    }\n    ngOnDestroy() {\n        this.baseOnDestroy();\n    }\n};\n__decorate([\n    Input()\n], ScullyBlurImageComponent.prototype, \"preloader\", void 0);\n__decorate([\n    HostBinding('style.height')\n], ScullyBlurImageComponent.prototype, \"height\", null);\n__decorate([\n    HostBinding('style.width')\n], ScullyBlurImageComponent.prototype, \"width\", null);\n__decorate([\n    HostBinding('attr.data-type')\n], ScullyBlurImageComponent.prototype, \"type\", null);\n__decorate([\n    HostBinding('attr.data-plugin-options')\n], ScullyBlurImageComponent.prototype, \"pluginOptionsAsString\", null);\nScullyBlurImageComponent = __decorate([\n    Component({\n        selector: 'scully-blur-image',\n        template,\n        styles: [componentStyles]\n    })\n], ScullyBlurImageComponent);\nlet ScullyTracedImageComponent = class ScullyTracedImageComponent extends ScullyImageComponent {\n    constructor() {\n        super(...arguments);\n        this.preloader = PreloaderTypes.tracedSVG;\n    }\n    get height() {\n        return this.getHeight();\n    }\n    get width() {\n        return this.getWidth();\n    }\n    get type() {\n        return this.preloader;\n    }\n    get pluginOptionsAsString() {\n        return JSON.stringify(this.pluginOptions);\n    }\n    ngOnInit() {\n        this.baseInit();\n    }\n    ngOnDestroy() {\n        this.baseOnDestroy();\n    }\n};\n__decorate([\n    Input()\n], ScullyTracedImageComponent.prototype, \"preloader\", void 0);\n__decorate([\n    HostBinding('style.height')\n], ScullyTracedImageComponent.prototype, \"height\", null);\n__decorate([\n    HostBinding('style.width')\n], ScullyTracedImageComponent.prototype, \"width\", null);\n__decorate([\n    HostBinding('attr.data-type')\n], ScullyTracedImageComponent.prototype, \"type\", null);\n__decorate([\n    HostBinding('attr.data-plugin-options')\n], ScullyTracedImageComponent.prototype, \"pluginOptionsAsString\", null);\nScullyTracedImageComponent = __decorate([\n    Component({\n        selector: 'scully-traced-image',\n        template,\n        styles: [componentStyles]\n    })\n], ScullyTracedImageComponent);\nlet ScullyPrimitivesImageComponent = class ScullyPrimitivesImageComponent extends ScullyImageComponent {\n    constructor() {\n        super(...arguments);\n        this.preloader = PreloaderTypes.primitives;\n    }\n    get height() {\n        return this.getHeight();\n    }\n    get width() {\n        return this.getWidth();\n    }\n    get type() {\n        return this.preloader;\n    }\n    get pluginOptionsAsString() {\n        return JSON.stringify(this.pluginOptions);\n    }\n    ngOnInit() {\n        this.baseInit();\n    }\n    ngOnDestroy() {\n        this.baseOnDestroy();\n    }\n};\n__decorate([\n    Input()\n], ScullyPrimitivesImageComponent.prototype, \"preloader\", void 0);\n__decorate([\n    HostBinding('style.height')\n], ScullyPrimitivesImageComponent.prototype, \"height\", null);\n__decorate([\n    HostBinding('style.width')\n], ScullyPrimitivesImageComponent.prototype, \"width\", null);\n__decorate([\n    HostBinding('attr.data-type')\n], ScullyPrimitivesImageComponent.prototype, \"type\", null);\n__decorate([\n    HostBinding('attr.data-plugin-options')\n], ScullyPrimitivesImageComponent.prototype, \"pluginOptionsAsString\", null);\nScullyPrimitivesImageComponent = __decorate([\n    Component({\n        selector: 'scully-primitives-image',\n        template,\n        styles: [componentStyles]\n    })\n], ScullyPrimitivesImageComponent);\n\nconst exportedComponents = [\n    ScullyBlurImageComponent,\n    ScullyTracedImageComponent,\n    ScullyPrimitivesImageComponent,\n];\nlet ScullyImageModule = class ScullyImageModule {\n};\nScullyImageModule = __decorate([\n    NgModule({\n        declarations: [ScullyImageComponent, ...exportedComponents],\n        imports: [HttpClientModule],\n        exports: [...exportedComponents],\n        providers: [VisibilityService],\n    })\n], ScullyImageModule);\n\n/*\n * Public API Surface of scully-image\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PreloaderTypes, PrimitivesShapes, SCULLY_IMAGE_URL_MAP, ScullyBlurImageComponent, ScullyImageComponent, ScullyImageModule, ScullyPrimitivesImageComponent, ScullyTracedImageComponent, tracedTurnPolicies, VisibilityService as ɵa };\n//# sourceMappingURL=scully-image.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./home/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'docs',\n    loadChildren: () => import('./docs/docs.module').then((m) => m.DocsModule),\n  },\n  {\n    path: 'examples',\n    loadChildren: () =>\n      import('./examples/examples.module').then((m) => m.ExamplesModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<ng-container *ngIf=\"!isExamplePage\">\n  <header class=\"main-header\" fxLayout=\"row\">\n    <a class=\"logo\" [routerLink]=\"['/']\" fxFlex> scully-image</a>\n\n    <nav class=\"main-nav\" fxFlex>\n      <a [routerLink]=\"['/docs/getting-started']\" fxFlex>Getting Started</a>\n      <a [routerLink]=\"['/docs/config']\" fxFlex>Config</a>\n      <a [routerLink]=\"['/docs/components']\" fxFlex>Components</a>\n\n      <a\n        href=\"https://www.github.com/cmgriffing/scully-plugin-scully-image\"\n        fxFlex\n      >\n        <img\n          _ngcontent-oga-c12=\"\"\n          src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n          width=\"40px\"\n          heigth=\"40px\"\n          alt=\"github\"\n        />\n      </a>\n    </nav>\n  </header>\n  <main>\n    <router-outlet></router-outlet>\n  </main>\n\n  <footer class=\"main-footer\" *ngIf=\"isHome\">\n    <nav fxLayout=\"row\">\n      <a [routerLink]=\"['/docs/getting-started']\" fxFlex>Getting Started</a>\n      <a [routerLink]=\"['/docs/config']\" fxFlex>Config</a>\n      <a [routerLink]=\"['/docs/components']\" fxFlex>Components</a>\n    </nav>\n  </footer>\n</ng-container>\n<ng-container *ngIf=\"isExamplePage\">\n  <router-outlet></router-outlet\n></ng-container>\n","import { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { ScullyRoutesService } from '@scullyio/ng-lib';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'documentation';\n\n  isHome = true;\n  isExamplePage = false;\n\n  constructor(\n    private scully: ScullyRoutesService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((event: any) => {\n      if (event instanceof NavigationEnd) {\n        this.isHome = event.url === '/';\n        this.isExamplePage = event.url.indexOf('/examples/') > -1;\n      }\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { ScullyImageModule } from 'scully-image';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ScullyLibModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    ScullyImageModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}